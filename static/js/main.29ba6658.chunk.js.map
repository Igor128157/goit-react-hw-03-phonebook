{"version":3,"sources":["components/Contact/Contact.module.css","components/ContactForm/ContactForm.jsx","components/Contact/Contact.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/App.jsx","utilities.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","INITIAL_STATE","name","id","number","ContactForm","state","nameInputId","uuidv4","numberInputId","handleChange","target","value","setState","handleSubmit","e","preventDefault","props","onAddContact","this","contactForm","styles","submitButton","inputForm","onSubmit","className","htmlFor","type","onChange","disabled","Component","Contact","onDelete","onClick","deleteButton","ContactList","contacts","length","map","contact","key","Filter","onChangeFilter","contactListLength","filterInputId","placeholder","App","filter","addContact","some","elem","alert","deleteContact","changeFilter","previousContacts","localStorage","getItem","JSON","parse","prevState","setItem","stringify","filteredContacts","toLowerCase","includes","filterContacts","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.29ba6658.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"deleteButton\":\"Contact_deleteButton__2HzE5\"};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { v4 as uuidv4 } from 'uuid';\nimport styles from './ContactForm.module.css';\n\nconst INITIAL_STATE = {\n  name: '',\n  id: '',\n  number: '',\n};\n\nexport default class ContactForm extends Component {\n  static propTypes = {\n    onAddContact: PropTypes.func.isRequired,\n  };\n\n  state = {\n    ...INITIAL_STATE\n  };\n\n  nameInputId = uuidv4();\n  numberInputId = uuidv4();\n\n  handleChange = ({ target }) => {\n    const { name, value } = target;\n    this.setState({\n      [name]: value,\n      id: uuidv4(),\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.onAddContact({ ...this.state });\n    this.setState({ ...INITIAL_STATE });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    const { contactForm, submitButton, inputForm } = styles;\n    return (\n      <form\n        onSubmit={this.handleSubmit}\n        className={contactForm}\n      >\n        <label htmlFor={this.nameInputId}>Name</label>\n        <input\n          className={inputForm}\n          type=\"text\"\n          id={this.nameInputId}\n          name=\"name\"\n          onChange={this.handleChange}\n          value={name}\n        />\n        <label htmlFor={this.numberInputId}>Number</label>\n        <input\n          className={inputForm}\n          type=\"tel\"\n          id={this.numberInputId}\n          name=\"number\"\n          onChange={this.handleChange}\n          value={number}\n        />\n        <button\n          className={submitButton}\n          type=\"submit\"\n          disabled={!name || !number}\n        >\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Contact.module.css';\n\nconst Contact = ({ name, number, onDelete }) => (\n  <li>\n    <span>\n      {name} : {number}\n    </span>\n    <button type=\"button\" onClick={onDelete} className={styles.deleteButton}>\n      Delete\n    </button>\n  </li>\n);\n\nContact.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\n\nexport default Contact;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Contact from '../Contact/Contact';\n\nconst ContactList = ({ contacts, onDelete }) => (\n  contacts.length > 0 && (\n    <ul>\n      {contacts.map((contact) => {\n        const { name, id, number } = contact;\n        return (\n          <Contact\n            key={id}\n            name={name}\n            number={number}\n            onDelete={() => onDelete(id)}\n          />\n        );\n      })}\n    </ul>\n  )\n);\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  })).isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst Filter = ({ value, onChangeFilter, contactListLength }) => {\n  const filterInputId = uuidv4();\n  return (\n    contactListLength >= 2 && (\n      <>\n        <label htmlFor={filterInputId}>Find contacts by name</label>\n        <input\n          type=\"text\"\n          id={filterInputId}\n          placeholder=\"Enter contact name...\"\n          value={value}\n          onChange={onChangeFilter}\n        />\n      </>)\n  );\n};\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChangeFilter: PropTypes.func.isRequired,\n  contactListLength: PropTypes.number.isRequired,\n};\nexport default Filter;\n","import React, { Component } from 'react';\n\nimport ContactForm from './ContactForm/ContactForm';\nimport ContactList from './ContactList/ContactList';\nimport Filter from './Filter/Filter';\n\nimport { filterContacts } from '../utilities';\n\nexport default class App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const previousContacts = localStorage.getItem('contacts');\n    if (previousContacts) {\n      this.setState({ contacts: JSON.parse(previousContacts) });\n    }\n  }\n\n  componentDidUpdate(prevState) {\n    const { contacts } = this.state;\n    if (prevState.contacts !== contacts) {\n      localStorage.setItem('contacts', JSON.stringify(contacts));\n    }\n  }\n\n  addContact = contact => {\n    const { contacts } = this.state;\n    if (contacts.some(elem => elem.name === contact.name)) {\n      alert(`${contact.name} is already in contacts.`);\n      return;\n    }\n    this.setState(state => ({ contacts: [...state.contacts, contact] }));\n  };\n\n  deleteContact = id => {\n    this.setState(state => ({\n      contacts: state.contacts.filter(elem => elem.id !== id),\n    }));\n  };\n\n  changeFilter = e => {\n    const { value } = e.target;\n    this.setState({ filter: value });\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n    const filteredContacts = filterContacts(contacts, filter);\n\n    return (\n      <>\n        <h1>Phonebook</h1>\n        <ContactForm onAddContact={this.addContact} />\n        <h2>Contacts</h2>\n        <Filter\n          value={filter}\n          onChangeFilter={this.changeFilter}\n          contactListLength={contacts.length}\n        />\n        <ContactList\n          contacts={filteredContacts}\n          onDelete={this.deleteContact}\n        />\n      </>\n    );\n  }\n}\n","export const filterContacts = (contacts, filter) => {\n    return contacts.filter((contact) => contact.name.toLowerCase().includes(filter.toLowerCase()));\n  };\n  ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__OrlO3\",\"inputForm\":\"ContactForm_inputForm__2GJhT\",\"submitButton\":\"ContactForm_submitButton__1j4U7\"};"],"sourceRoot":""}